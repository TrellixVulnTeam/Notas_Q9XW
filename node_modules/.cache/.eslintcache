[{"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\index.js":"1","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\App.js":"2","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\reportWebVitals.js":"3","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header\\index.js":"4","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\home\\index.js":"5","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\routes.js":"6","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\login\\index.js":"7","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\register\\index.js":"8","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\notes\\index\\index.js":"9","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\users\\edit\\index.js":"10","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\register_form\\index.js":"11","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\api.js":"12","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\users.js":"13","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\login_form\\index.js":"14","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\private_route\\index.js":"15","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header_logged\\index.js":"16","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\index.js":"17","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\note.js":"18","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\list\\index.js":"19","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\editor\\index.js":"20","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\search\\index.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":302,"mtime":1617036785070,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1954,"mtime":1617646354319,"results":"26","hashOfConfig":"23"},{"size":1700,"mtime":1617645788355,"results":"27","hashOfConfig":"23"},{"size":889,"mtime":1617214602336,"results":"28","hashOfConfig":"23"},{"size":1860,"mtime":1617646005535,"results":"29","hashOfConfig":"23"},{"size":1946,"mtime":1617646026031,"results":"30","hashOfConfig":"23"},{"size":514,"mtime":1617215436717,"results":"31","hashOfConfig":"23"},{"size":156,"mtime":1617039819901,"results":"32","hashOfConfig":"23"},{"size":2988,"mtime":1617134430279,"results":"33","hashOfConfig":"23"},{"size":113,"mtime":1617131271151,"results":"34","hashOfConfig":"23"},{"size":480,"mtime":1617210030406,"results":"35","hashOfConfig":"23"},{"size":2681,"mtime":1617137581008,"results":"36","hashOfConfig":"23"},{"size":404,"mtime":1617143930925,"results":"37","hashOfConfig":"23"},{"size":3470,"mtime":1617216851863,"results":"38","hashOfConfig":"23"},{"size":2665,"mtime":1617654841383,"results":"39","hashOfConfig":"23"},{"size":733,"mtime":1617641487451,"results":"40","hashOfConfig":"23"},{"size":1858,"mtime":1617651021077,"results":"41","hashOfConfig":"23"},{"size":1259,"mtime":1617296186559,"results":"42","hashOfConfig":"23"},{"size":1307,"mtime":1617651275399,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1hlc968",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"46"},"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\index.js",[],["99","100"],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\App.js",["101","102"],"import React,{Fragment} from 'react';\nimport { Notification, Section } from 'rbx';\nimport './App.scss';\nimport Routes from './routes.js';\n\nfunction App() {\n  return (\n      \n        <Fragment >\n            \n              <Routes/>\n              \n        </Fragment>\n       \n  );\n}\n\nexport default App;\n","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\reportWebVitals.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header\\index.js",["103","104"],"import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Navbar, Container, Block, Column } from 'rbx';\r\nimport LogoImage from '../../assets/images/logo.png';\r\nimport \"../../styles/header.scss\";\r\n\r\nfunction Header() {\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n    return (\r\n        <Navbar>\r\n            <Container>\r\n                <Navbar.Brand>\r\n                    <Link to=\"/\">\r\n                        <img src={LogoImage} />\r\n                        </Link>\r\n                        <p className=\"logo\">CRIE SUAS NOTAS</p>\r\n                    \r\n                    <Navbar.Burger\r\n                        className=\"navbar-burger burger\"\r\n                        aria-label=\"menu\"\r\n                        aria-expanded=\"false\"\r\n                        data-target=\"navbar-menu\">\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </Navbar.Burger>\r\n\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Menu id=\"navbar-menu\"\r\n                    active={openMenu.toString()}\r\n                    onClick={() => setOpenMenu(!openMenu)} >\r\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\r\n                        <Column.Group>\r\n                            <Column>\r\n                                <Link to=\"/register\" className=\"button is-white has-text-custom-blue\">Register</Link>\r\n                            </Column>\r\n                            <Column>\r\n                                <Link to=\"/login\" className=\"button is-outlined is-custom-blue\">Login</Link>\r\n                            </Column>\r\n                        </Column.Group>\r\n                    </Navbar.Segment>\r\n                </Navbar.Menu>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\home\\index.js",["105"],"import React, { Fragment } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PresentationImage from '../../assets/images/presentation.png';\r\nimport Header from '../../components/header';\r\nimport { Column, Section, Title, Container } from 'rbx';\r\nimport  '../../styles/home.scss';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n\r\n            <Section size=\"medium\" className=\"home\">\r\n                <Container>\r\n                    <Column.Group>\r\n                        <Column size={5}>\r\n\r\n                            <Title size={2} spaced className=\"has-text-white\">\r\n                                Create notes easily and access when you wants on the cloud\r\n                            </Title>\r\n                            <Title size={5} spaced className=\"has-text-white\" subtitle>\r\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.<br /><br />\r\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print.\r\n                            </Title>\r\n                            <Link to=\"/register\" className=\"button is-outlined is-white is-large\">\r\n                                <strong>Register for free Now</strong>\r\n                            </Link>\r\n\r\n                        </Column>\r\n                        <Column size={6} offset={1}>\r\n\r\n                            <img src={PresentationImage} />\r\n\r\n                        </Column>\r\n                    </Column.Group>\r\n                </Container>\r\n            </Section>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\routes.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\login\\index.js",["106"],"import React, { Fragment } from 'react';\r\nimport Header from \"../../../components/header\";\r\nimport { Column, Section, Title, Container, Card } from \"rbx\";\r\nimport LogoImage from '../../../assets/images/logo.png';\r\nimport \"../../../styles/auth.scss\";\r\nimport LoginForm from \"../../../components/auth/login_form\";\r\n\r\nfunction Login() {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Section size=\"undefined\" className=\"auth\">\r\n                <Container>\r\n                    <Column.Group centered>\r\n                        <Column size={3}>\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    <Section>\r\n                                        <Column.Group centered>\r\n                                            <Column size={12}>\r\n                                              {/*   <img src={LogoImage} /> */}\r\n                                            </Column>\r\n                                        </Column.Group>\r\n\r\n                                        <Column.Group>\r\n                                            <Column size={12}>\r\n                                                <Title size={6} className=\"has-text-grey has-text-centered\">\r\n                                                    Suas notas na nuvem\r\n                                                 </Title>\r\n                                            </Column>\r\n                                        </Column.Group>\r\n                                    </Section>\r\n                                    <LoginForm/>\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Column>\r\n                    </Column.Group>\r\n                </Container>\r\n            </Section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\register\\index.js",["107"],"import React, { Fragment } from 'react';\r\nimport Header from '../../../components/header';\r\nimport { Section, Container, Column, Card, Title } from 'rbx';\r\nimport LogoImage from '../../../assets/images/logo.png';\r\nimport '../../../styles/auth.scss';\r\nimport RegisterForm from '../../../components/auth/register_form';\r\n\r\n\r\n\r\nfunction Register() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Section size=\"undefined\" className=\"auth\">\r\n                <Container>\r\n                    <Column.Group centered>\r\n                        <Column size={4}>\r\n                            <Card>\r\n                                <Card.Content>\r\n\r\n                                    <Section>\r\n                                        <Column.Group centered>\r\n                                            <Column size={8}>\r\n                                               {/*  <img className=\"img\" src={LogoImage}  /> */}\r\n                                            </Column>\r\n                                        </Column.Group>\r\n\r\n                                        <RegisterForm/>\r\n                                        \r\n                                        <Column.Group>\r\n                                            <Column size={12}>\r\n                                                <Title size={6} className=\"has-text-grey has-text-centered\">\r\n                                                    Suas notas na nuvem\r\n                                                </Title>\r\n                                            </Column>\r\n                                        </Column.Group>\r\n                                    </Section>\r\n\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Column>\r\n                    </Column.Group>\r\n                </Container>\r\n            </Section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\notes\\index\\index.js",["108"],"import React, {Fragment, useState} from 'react';\r\nimport { Column } from 'rbx';\r\nimport HeaderLogged from '../../../components/header_logged';\r\nimport Notes from '../../../components/notes';\r\n//import \"../../styles/notes.scss\";\r\n\r\nfunction NotesScreen(){\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return(\r\n        <Fragment>\r\n            <HeaderLogged  setIsOpen={setIsOpen} />\r\n            <Notes isOpen={isOpen} setIsOpen={setIsOpen} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotesScreen;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\users\\edit\\index.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\register_form\\index.js",["109","110","111","112"],"import React,{ Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from 'rbx';\r\nimport { Redirect } from 'react-router-dom' \r\nimport UserService from '../../../services/users';\r\n\r\n\r\nfunction RegisterForm(){\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    const handleSubmit = async (evt)=>{\r\n        evt.preventDefault();\r\n\r\n        try {\r\n            const user = await UserService.register({name: name, password: password, email: email});\r\n            setRedirectToLogin(true)\r\n        } catch (error) {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    if(redirectToLogin == true)\r\n    return <Redirect to={{pathname: \"/login\"}}/>\r\n\r\n    return(\r\n        <Fragment>\r\n        <Column.Group centered>\r\n          <form onSubmit={handleSubmit}>\r\n            <Column size={12}>\r\n              <Field>\r\n                <Label size=\"small\">Nome:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"name\"\r\n                    required\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={ e => setName(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Email:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"email\" \r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={ e => setEmail(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Password:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"password\" \r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={ e=> setPassword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Control>\r\n                  <Column.Group breakpoint=\"mobile\">\r\n                    <Column>\r\n                      <a onClick={e => setRedirectToLogin(true)} className=\"button is-white has-text-custom-purple\">Entrar</a>\r\n                    </Column>\r\n                    <Column>\r\n                      <Button color=\"custom-purple\" outlined>Registro</Button>\r\n                    </Column>\r\n                  </Column.Group>\r\n                </Control>\r\n              </Field>\r\n              { error && <Help color=\"danger\">Email ou senha incorretas</Help> }\r\n            </Column>\r\n          </form>\r\n        </Column.Group>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\api.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\users.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\login_form\\index.js",["113","114","115","116"],"import React,{Fragment, useState} from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserService from '../../../services/users';\r\n\r\n\r\nfunction LoginForm(){\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirectToRegister, setRedirectToRegister] = useState(false);\r\n    const [redirectToNotes, setRedirectToNotes] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    if(redirectToRegister == true)\r\n    return <Redirect to={{pathname: \"/register\"}}/>\r\n    else if(redirectToNotes == true)\r\n    return <Redirect to={{pathname: \"/notes\"}}/>\r\n\r\n    const handleSubmit = async (evt) =>{\r\n        evt.preventDefault();\r\n\r\n        try {\r\n            await UserService.login({email:email, password: password})\r\n            setRedirectToNotes(true)\r\n        } catch (error) {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <Column.Group centered>\r\n          <form onSubmit={handleSubmit}>\r\n            <Column size={12}>\r\n              <Field>\r\n                <Label size=\"small\">Email:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"email\" \r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Password:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"password\" \r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Control>\r\n                  <Column.Group breakpoint=\"mobile\">\r\n                    <Column>\r\n                      <a onClick={e => setRedirectToRegister(true)} className=\"button is-white has-text-custom-purple\">Registrar-se</a>\r\n                    </Column>\r\n                    <Column>\r\n                      <Button color=\"custom-purple\" outlined>Login</Button>\r\n                    </Column>\r\n                  </Column.Group>\r\n                </Control>\r\n              </Field>\r\n              { error && <Help color=\"danger\">Email ou Senha errado</Help> }\r\n            </Column>\r\n          </form>\r\n        </Column.Group>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\private_route\\index.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header_logged\\index.js",["117","118","119","120"],"import React, { useState } from 'react';\r\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\r\nimport LogoImage from '../../assets/images/logo.png';\r\nimport \"../../styles/header.scss\";\r\nimport UserService from '../../services/users';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction HeaderLogged(props) {\r\n\r\n    const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n    const logOut = async () => {\r\n        await UserService.logout();\r\n        setRedirectToHome(true);\r\n    }\r\n\r\n    if (redirectToHome == true)\r\n        return <Redirect to={{ pathname: \"/\" }} />\r\n\r\n    return (\r\n\r\n        <Navbar color=\"custom-blue\" className=\"navbar-logged\">\r\n            <Navbar.Brand>\r\n                <Column.Group>\r\n                    <Column size=\"11\" offset=\"1\">\r\n                        <Link to=\"/\">\r\n                            <img className=\"imgLogged\" src={LogoImage} />\r\n                        </Link>\r\n                    </Column>\r\n                </Column.Group>\r\n\r\n                <Navbar.Burger\r\n                    className=\"navbar-burger burger\"\r\n                    aria-label=\"menu\"\r\n                    aria-expanded=\"false\"\r\n                    data-target=\"navbar-menu\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </Navbar.Burger>\r\n\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Menu>\r\n\r\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-start\" align=\"start\">\r\n                    <Navbar.Item as=\"div\">\r\n                        <Button\r\n                            className=\"open-button\"\r\n                            color=\"white\"\r\n                            outlined\r\n                            onClick={() => props.setIsOpen(true)}>\r\n                            <FontAwesomeIcon icon={faList} />\r\n                        </Button>\r\n                    </Navbar.Item>\r\n                </Navbar.Segment>\r\n\r\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\r\n                    <Navbar.Item as=\"div\">\r\n                        <Dropdown>\r\n                            <Dropdown.Trigger>\r\n                                <Button className=\"button\" color=\"white\" outlined>\r\n                                    <span>Rodrigo ▼</span>\r\n                                </Button>\r\n                            </Dropdown.Trigger>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Content>\r\n                                    <Dropdown.Item as=\"div\">\r\n                                        <Link to=\"/users/edit\">Editar Usuario</Link>\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item as=\"div\">\r\n                                        <a href=\"#\" onClick={e => logOut()}>Sair</a>\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Content>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Navbar.Item>\r\n                </Navbar.Segment>\r\n            </Navbar.Menu>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderLogged;\r\n","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\index.js",["121","122"],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\note.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\list\\index.js",["123"],"import React, { Fragment } from 'react';\r\nimport { Button, Column, Tag, Title, List } from \"rbx\";\r\nimport Moment from 'moment';\r\nimport \"../../../styles/notes.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ListNotes(props) {\r\n  \r\n  return (\r\n    \r\n    <Fragment>\r\n      <Column.Group breakpoint=\"mobile\">\r\n        <Column size={6} offset={1}>\r\n          <Title size={6}>\r\n            {props.notes.length} Notes\r\n          </Title>\r\n        </Column>\r\n\r\n        <Column size={2}>\r\n          <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\r\n            Notes +\r\n           </Button>\r\n        </Column>\r\n\r\n      </Column.Group>\r\n      <List className=\"notes-list\">\r\n        {props.notes.map((item, key) =>\r\n          <List.Item as=\"div\" key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\r\n            <Title size={6}>\r\n              {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)}\r\n            </Title>\r\n            <Title size={6} subtitle spaced={false}>\r\n              {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)}\r\n            </Title>\r\n\r\n            <Column.Group breakpoint=\"mobile\">\r\n              <Column size={10}>\r\n                <Tag color=\"dark\">\r\n                  {Moment(item.created_at).format('DD/MM')} \r\n                </Tag>              \r\n              </Column>\r\n              <Column size={2}>\r\n              <FontAwesomeIcon\r\n                icon={faTrash}\r\n                onClick={() => props.deleteNote(item)}\r\n                color=\"grey\"\r\n              />\r\n            </Column>\r\n            </Column.Group>\r\n          </List.Item>\r\n        )}\r\n      </List>\r\n    </Fragment> \r\n\r\n  )\r\n}\r\n\r\nexport default ListNotes;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\editor\\index.js",["124"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport ReactQuill from 'react-quill'; // ES6\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\n\r\nfunction Editor(props) {\r\n  const [currentContent, setCurrentContent] = useState('')\r\n  const [timer, setTimer] = useState(null)\r\n\r\n  const updateNote = (content) => {\r\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\r\n    props.updateNote(props.note, {'title': title, 'body': content})\r\n  }\r\n\r\n\r\n  const handleChange = (content, delta, source) =>{\r\n    clearTimeout(timer);\r\n    if(source == 'user'){\r\n      setCurrentContent(content)\r\n      setTimer(setTimeout(() => updateNote(content), 2000))\r\n    }\r\n  }\r\n\r\n  useEffect(()=> {\r\n    setCurrentContent(props.note.body)\r\n  }, [props.note])\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\r\n      [{'list': 'ordered'}, {'list': 'bullet'}, \r\n       {'indent': '-1'}, {'indent': '+1'}],\r\n      ['link'],\r\n      ['clean'],\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ReactQuill value={currentContent} modules={modules} onChange={handleChange}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Editor;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\search\\index.js",["125"],"import React, { useState } from 'react';\r\nimport { Input, Column } from \"rbx\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Search(props) {\r\n    const [query, setQuery] = useState(\"\")\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            props.searchNotes(query)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Column.Group className=\"is-vcentered\" breakpoint=\"mobile\">\r\n            <Column size=\"9\" offset={1}>\r\n                <Input type=\"text\"\r\n                    name={query}\r\n                    value={query}\r\n                    placeholder=\"Search note...\"\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    onKeyDown={handleKeyDown} />\r\n            </Column>\r\n            <Column mobile={2} size={1}>\r\n                <a href=\"#\" onClick={() => {\r\n                    props.fetchNotes()\r\n                    setQuery('')\r\n                }}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTimes}\r\n                        color=\"grey\"\r\n                        className=\"is-pulled-left  \"\r\n                    />\r\n                </a>\r\n            </Column>\r\n        </Column.Group>\r\n    )\r\n}\r\n\r\nexport default Search;",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"134","line":2,"column":24,"nodeType":"132","messageId":"133","endLine":2,"endColumn":31},{"ruleId":"130","severity":1,"message":"135","line":3,"column":29,"nodeType":"132","messageId":"133","endLine":3,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":14,"column":25,"nodeType":"138","endLine":14,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":32,"column":29,"nodeType":"138","endLine":32,"endColumn":60},{"ruleId":"130","severity":1,"message":"139","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"139","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"140","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"134","line":2,"column":49,"nodeType":"132","messageId":"133","endLine":2,"endColumn":56},{"ruleId":"130","severity":1,"message":"141","line":20,"column":19,"nodeType":"132","messageId":"133","endLine":20,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":27,"column":24,"nodeType":"144","messageId":"145","endLine":27,"endColumn":26},{"ruleId":"146","severity":1,"message":"147","line":75,"column":23,"nodeType":"138","endLine":75,"endColumn":117},{"ruleId":"130","severity":1,"message":"134","line":2,"column":49,"nodeType":"132","messageId":"133","endLine":2,"endColumn":56},{"ruleId":"142","severity":1,"message":"143","line":15,"column":27,"nodeType":"144","messageId":"145","endLine":15,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":17,"column":29,"nodeType":"144","messageId":"145","endLine":17,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":64,"column":23,"nodeType":"138","endLine":64,"endColumn":120},{"ruleId":"130","severity":1,"message":"148","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":27},{"ruleId":"142","severity":1,"message":"143","line":19,"column":24,"nodeType":"144","messageId":"145","endLine":19,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":29,"column":29,"nodeType":"138","endLine":29,"endColumn":74},{"ruleId":"146","severity":1,"message":"149","line":75,"column":41,"nodeType":"138","endLine":75,"endColumn":77},{"ruleId":"130","severity":1,"message":"150","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":50,"column":23,"nodeType":"144","messageId":"145","endLine":50,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":29,"column":97,"nodeType":"144","messageId":"145","endLine":29,"endColumn":99},{"ruleId":"142","severity":1,"message":"143","line":18,"column":15,"nodeType":"144","messageId":"145","endLine":18,"endColumn":17},{"ruleId":"146","severity":1,"message":"149","line":26,"column":17,"nodeType":"138","endLine":29,"endColumn":20},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","'Section' is defined but never used.","'Block' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LogoImage' is defined but never used.","'Column' is defined but never used.","'user' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]