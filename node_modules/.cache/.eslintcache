[{"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\index.js":"1","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\App.js":"2","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\reportWebVitals.js":"3","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header\\index.js":"4","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\home\\index.js":"5","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\routes.js":"6","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\login\\index.js":"7","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\register\\index.js":"8","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\notes\\index\\index.js":"9","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\users\\edit\\index.js":"10","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\register_form\\index.js":"11","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\api.js":"12","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\users.js":"13","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\login_form\\index.js":"14","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\private_route\\index.js":"15","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header_logged\\index.js":"16","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\index.js":"17","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\note.js":"18","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\list\\index.js":"19","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\editor\\index.js":"20","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\search\\index.js":"21","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\users\\user_edit_form\\index.js":"22","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\users\\user_edit_password_form\\index.js":"23","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\users\\user_delete\\index.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":302,"mtime":1617036785070,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":2145,"mtime":1617726733107,"results":"29","hashOfConfig":"26"},{"size":1700,"mtime":1617645788355,"results":"30","hashOfConfig":"26"},{"size":889,"mtime":1617214602336,"results":"31","hashOfConfig":"26"},{"size":1896,"mtime":1617730000744,"results":"32","hashOfConfig":"26"},{"size":1938,"mtime":1617729863059,"results":"33","hashOfConfig":"26"},{"size":514,"mtime":1617215436717,"results":"34","hashOfConfig":"26"},{"size":1626,"mtime":1617724233415,"results":"35","hashOfConfig":"26"},{"size":4144,"mtime":1617742313920,"results":"36","hashOfConfig":"26"},{"size":113,"mtime":1617131271151,"results":"37","hashOfConfig":"26"},{"size":1100,"mtime":1617723087612,"results":"38","hashOfConfig":"26"},{"size":2681,"mtime":1617137581008,"results":"39","hashOfConfig":"26"},{"size":404,"mtime":1617143930925,"results":"40","hashOfConfig":"26"},{"size":3558,"mtime":1617726096321,"results":"41","hashOfConfig":"26"},{"size":2716,"mtime":1617673480220,"results":"42","hashOfConfig":"26"},{"size":733,"mtime":1617673526076,"results":"43","hashOfConfig":"26"},{"size":1858,"mtime":1617733876045,"results":"44","hashOfConfig":"26"},{"size":1259,"mtime":1617296186559,"results":"45","hashOfConfig":"26"},{"size":1309,"mtime":1617656029388,"results":"46","hashOfConfig":"26"},{"size":2142,"mtime":1617721280499,"results":"47","hashOfConfig":"26"},{"size":2311,"mtime":1617734298231,"results":"48","hashOfConfig":"26"},{"size":685,"mtime":1617724086735,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1hlc968",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"52"},"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\index.js",[],["113","114"],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\App.js",["115","116"],"import React,{Fragment} from 'react';\nimport { Notification, Section } from 'rbx';\nimport './App.scss';\nimport Routes from './routes.js';\n\nfunction App() {\n  return (\n      \n        <Fragment >\n            \n              <Routes/>\n              \n        </Fragment>\n       \n  );\n}\n\nexport default App;\n","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\reportWebVitals.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header\\index.js",["117","118"],"import React, { useState } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Navbar, Container, Block, Column } from 'rbx';\r\nimport LogoImage from '../../assets/images/logo.png';\r\nimport \"../../styles/header.scss\";\r\n\r\nfunction Header() {\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n    return (\r\n        <Navbar>\r\n            <Container>\r\n                <Navbar.Brand>\r\n                    <Link to=\"/\">\r\n                        <img src={LogoImage} />\r\n                        </Link>\r\n                        <p className=\"logo\">CRIE SUAS NOTAS</p>\r\n                    \r\n                    <Navbar.Burger\r\n                        className=\"navbar-burger burger\"\r\n                        aria-label=\"menu\"\r\n                        aria-expanded=\"false\"\r\n                        data-target=\"navbar-menu\">\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                        <span aria-hidden=\"true\"></span>\r\n                    </Navbar.Burger>\r\n\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Menu id=\"navbar-menu\"\r\n                    active={openMenu.toString()}\r\n                    onClick={() => setOpenMenu(!openMenu)}  >\r\n                    <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\r\n                        <Column.Group>\r\n                            <Column>\r\n                                <Link to=\"/notes\" className=\"button is-white has-text-custom-blue\">Notas</Link>\r\n                            </Column>\r\n                            <Column>\r\n                                <Link to=\"/register\" className=\"button is-white has-text-custom-blue\">Register</Link>\r\n                            </Column>\r\n                            <Column>\r\n                                <Link to=\"/login\" className=\"button is-outlined is-custom-blue\">Login</Link>\r\n                            </Column>\r\n                        </Column.Group>\r\n                    </Navbar.Segment>\r\n                </Navbar.Menu>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\home\\index.js",["119"],"import React, { Fragment } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PresentationImage from '../../assets/images/presentation.png';\r\nimport Header from '../../components/header';\r\nimport { Column, Section, Title, Container } from 'rbx';\r\nimport  '../../styles/home.scss';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n\r\n            <Section size=\"medium\" className=\"home\">\r\n                <Container>\r\n                    <Column.Group>\r\n                        <Column size={5}>\r\n\r\n                            <Title size={2} spaced className=\"has-text-white\">\r\n                                Create notes easily and access when you wants on the cloud\r\n                            </Title>\r\n                            <Title size={5} spaced className=\"has-text-white\" subtitle>\r\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.<br /><br />\r\n                                Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print.\r\n                            </Title>\r\n                            <Link to=\"/register\" className=\"button is-outlined is-white is-large\">\r\n                                <strong>Register for free Now</strong>\r\n                            </Link>\r\n\r\n                        </Column>\r\n                        <Column size={6} offset={1}>\r\n\r\n                            <img src={PresentationImage} />\r\n\r\n                        </Column>\r\n                    </Column.Group>\r\n                </Container>\r\n            </Section>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\routes.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\login\\index.js",["120"],"import React, { Fragment } from 'react';\r\nimport Header from \"../../../components/header\";\r\nimport { Column, Section, Title, Container, Card } from \"rbx\";\r\nimport LogoImage from '../../../assets/images/logo.png';\r\nimport \"../../../styles/auth.scss\";\r\nimport LoginForm from \"../../../components/auth/login_form\";\r\n\r\nfunction Login() {\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Section size=\"undefined\" className=\"auth\">\r\n                <Container>\r\n                    <Column.Group centered>\r\n                        <Column size={5}>\r\n                            <Card>\r\n                                <Card.Content>\r\n                                    <Section>\r\n                                        <Column.Group centered>\r\n                                            <Column size={5}>\r\n                                                <img src={LogoImage} />\r\n                                            </Column>\r\n                                        </Column.Group>\r\n\r\n                                        <Column.Group>\r\n                                            <Column size={12}>\r\n                                            <LoginForm/>\r\n                                                <Title size={6} className=\"has-text-grey has-text-centered\">\r\n                                                    Suas notas na nuvem\r\n                                                 </Title>\r\n                                            </Column>\r\n                                        </Column.Group>\r\n                                    </Section>\r\n                                   \r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Column>\r\n                    </Column.Group>\r\n                </Container>\r\n            </Section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\auth\\register\\index.js",["121"],"import React, { Fragment } from 'react';\r\nimport Header from '../../../components/header';\r\nimport { Section, Container, Column, Card, Title } from 'rbx';\r\nimport LogoImage from '../../../assets/images/logo.png';\r\nimport '../../../styles/auth.scss';\r\nimport RegisterForm from '../../../components/auth/register_form';\r\n\r\n\r\n\r\nfunction Register() {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Header />\r\n            <Section size=\"undefined\" className=\"auth\">\r\n                <Container>\r\n                    <Column.Group centered>\r\n                        <Column size={4}>\r\n                            <Card>\r\n                                <Card.Content>\r\n\r\n                                    <Section>\r\n                                        <Column.Group centered>\r\n                                            <Column size={4}>\r\n                                                <img className=\"img\" src={LogoImage}  />\r\n                                            </Column>\r\n                                        </Column.Group>\r\n\r\n                                        <RegisterForm/>\r\n                                        \r\n                                        <Column.Group>\r\n                                            <Column size={12}>\r\n                                                <Title size={6} className=\"has-text-grey has-text-centered\">\r\n                                                    Suas notas na nuvem\r\n                                                </Title>\r\n                                            </Column>\r\n                                        </Column.Group>\r\n                                    </Section>\r\n\r\n                                </Card.Content>\r\n                            </Card>\r\n                        </Column>\r\n                    </Column.Group>\r\n                </Container>\r\n            </Section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\notes\\index\\index.js",["122"],"import React, {Fragment, useState} from 'react';\r\nimport { Column } from 'rbx';\r\nimport HeaderLogged from '../../../components/header_logged';\r\nimport Notes from '../../../components/notes';\r\n//import \"../../styles/notes.scss\";\r\n\r\nfunction NotesScreen(){\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    return(\r\n        <Fragment>\r\n            <HeaderLogged  setIsOpen={setIsOpen} />\r\n            <Notes isOpen={isOpen} setIsOpen={setIsOpen} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotesScreen;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\screen\\users\\edit\\index.js",["123"],"import React, {Fragment} from 'react';\r\nimport { Column, Section, Title, Container, Card, Button } from 'rbx';\r\nimport '../../../styles/users.scss';\r\nimport HeaderLogged from '../../../components/header_logged';\r\nimport UsersEditForm from '../../../components/users/user_edit_form';\r\nimport UsersEditFormPassword from '../../../components/users/user_edit_password_form';\r\nimport UsersDelete from '../../../components/users/user_delete';\r\n\r\n\r\nfunction UserEdit(){\r\n    return(\r\n        <Fragment>\r\n    <HeaderLogged />\r\n    <Section size=\"medium\" className=\"users\">\r\n      <Container>\r\n        <Column.Group centered className=\"users-edit\">\r\n          <Column size={4}>\r\n            <Title size={5} className=\"has-text-grey has-text-left\">\r\n              Informações Pessoais\r\n            </Title>\r\n            <Card>\r\n              <Card.Content>\r\n                <UsersEditForm/>\r\n              </Card.Content>\r\n            </Card>\r\n          </Column>\r\n        </Column.Group>\r\n\r\n        <Column.Group centered className=\"users-edit\">\r\n          <Column size={4}>\r\n            <Title size={5} className=\"has-text-grey has-text-left\">\r\n              Password\r\n            </Title>\r\n            <Card>\r\n              <Card.Content>\r\n                <UsersEditFormPassword/>\r\n              </Card.Content>\r\n            </Card>\r\n          </Column>\r\n        </Column.Group>\r\n        <Column.Group centered>\r\n          <Column size={4} className=\"has-text-right\">\r\n            <UsersDelete/>\r\n          </Column>\r\n        </Column.Group>\r\n      </Container>\r\n    </Section>\r\n  </Fragment>\r\n    )\r\n};\r\n\r\nexport default UserEdit;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\register_form\\index.js",["124","125","126","127","128"],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\api.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\users.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\login_form\\index.js",["129","130","131","132"],"import React,{Fragment, useState} from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserService from '../../../services/users';\r\n\r\n\r\nfunction LoginForm(){\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState(\"\");\r\n    const [redirectToRegister, setRedirectToRegister] = useState(false);\r\n    const [redirectToNotes, setRedirectToNotes] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    if(redirectToRegister == true)\r\n    return <Redirect to={{pathname: \"/register\"}}/>\r\n    else if(redirectToNotes == true)\r\n    return <Redirect to={{pathname: \"/notes\"}}/>\r\n\r\n    const handleSubmit = async (evt) =>{\r\n        evt.preventDefault();\r\n\r\n        try {\r\n            await UserService.login({email:email, password: password})\r\n            setRedirectToNotes(true)\r\n        } catch (error) {\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <Column.Group centered>\r\n          <form onSubmit={handleSubmit}>\r\n            <Column size={12}>\r\n              <Field>\r\n                <Label size=\"small\">Email:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"email\" \r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Password:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"password\" \r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Control>\r\n                  <Column.Group breakpoint=\"mobile\">\r\n                    <Column>\r\n                      <a onClick={e => setRedirectToRegister(true)} className=\"button is-white has-text-custom-purple\">Registrar-se</a>\r\n                    </Column>\r\n                    <Column>\r\n                      <Button color=\"custom-purple\" outlined>Login</Button>\r\n                    </Column>\r\n                  </Column.Group>\r\n                </Control>\r\n              </Field>\r\n              { error && <Help color=\"danger\">Email ou Senha errado</Help> }\r\n            </Column>\r\n          </form>\r\n        </Column.Group>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\auth\\private_route\\index.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\header_logged\\index.js",["133","134","135","136","137"],"import React, { useState } from 'react';\r\nimport { Navbar, Container, Column, Button, Dropdown } from 'rbx';\r\nimport LogoImage from '../../assets/images/logo.png';\r\nimport \"../../styles/header.scss\";\r\nimport UserService from '../../services/users';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faList } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction HeaderLogged(props) {\r\n\r\n    const [redirectToHome, setRedirectToHome] = useState(false);\r\n    const [name, setName] = useState(localStorage.getItem('user'));\r\n\r\n    const logOut = async () => {\r\n        await UserService.logout();\r\n        setRedirectToHome(true);\r\n    }\r\n\r\n    if (redirectToHome == true)\r\n        return <Redirect to={{ pathname: \"/\" }} />\r\n\r\n    return (\r\n\r\n        <Navbar color=\"custom-blue\" className=\"navbar-logged\">\r\n            <Navbar.Brand>\r\n                <Column.Group>\r\n                    <Column size=\"11\" offset=\"1\">\r\n                        <Link to=\"/\">\r\n                            <img className=\"imgLogged\" src={LogoImage} />\r\n                        </Link>\r\n                    </Column>\r\n                </Column.Group>\r\n\r\n                <Navbar.Burger\r\n                    className=\"navbar-burger burger\"\r\n                    aria-label=\"menu\"\r\n                    aria-expanded=\"false\"\r\n                    data-target=\"navbar-menu\">\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                    <span aria-hidden=\"true\"></span>\r\n                </Navbar.Burger>\r\n\r\n            </Navbar.Brand>\r\n\r\n            <Navbar.Menu>\r\n\r\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-start\" align=\"start\">\r\n                    <Navbar.Item as=\"div\">\r\n                        <Button\r\n                            className=\"open-button\"\r\n                            color=\"white\"\r\n                            outlined\r\n                            onClick={() => props.setIsOpen(true)}>\r\n                            <FontAwesomeIcon icon={faList} />\r\n                        </Button>\r\n                    </Navbar.Item>\r\n                </Navbar.Segment>\r\n\r\n                <Navbar.Segment as=\"div\" className=\"navbar-item navbar-end\" align=\"right\">\r\n                    <Navbar.Item as=\"div\">\r\n                        <Dropdown>\r\n                            <Dropdown.Trigger>\r\n                                <Button className=\"button\" color=\"white\" outlined>\r\n                                    <span>{JSON.parse(name)['name']} ▼</span>\r\n                                </Button>\r\n                            </Dropdown.Trigger>\r\n                            <Dropdown.Menu>\r\n                                <Dropdown.Content>\r\n                                    <Dropdown.Item as=\"div\">\r\n                                        <Link to=\"/users/edit\">Editar Usuario</Link>\r\n                                    </Dropdown.Item>\r\n                                    <Dropdown.Divider />\r\n                                    <Dropdown.Item as=\"div\">\r\n                                        <a href=\"#\" onClick={e => logOut()}>Sair</a>\r\n                                    </Dropdown.Item>\r\n                                </Dropdown.Content>\r\n                            </Dropdown.Menu>\r\n                        </Dropdown>\r\n                    </Navbar.Item>\r\n                </Navbar.Segment>\r\n            </Navbar.Menu>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default HeaderLogged;\r\n","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\index.js",["138","139"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Column, Button } from \"rbx\";\r\nimport \"../../styles/notes.scss\";\r\nimport { push as Menu } from 'react-burger-menu'\r\nimport List from \"../notes/list\";\r\nimport Editor from \"../notes/editor\";\r\nimport Search from \"../notes/search\";\r\nimport NotesService from '../../services/note';\r\n\r\nfunction Notes(props) {\r\n  const [notes, setNotes] = useState([]);\r\n  const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\r\n\r\n  async function fetchNotes() {\r\n    const response = await NotesService.index();\r\n    if (response.data.length >= 1) {\r\n      setNotes(response.data.reverse())\r\n      setCurrentNote(response.data[0])\r\n    } else {\r\n      setNotes([]);\r\n    }\r\n  }\r\n\r\n  const createNote = async () => {\r\n    await NotesService.create();\r\n    fetchNotes();\r\n  }\r\n\r\n  const deleteNote = async (note) => {\r\n    await NotesService.delete(note._id);\r\n    fetchNotes();\r\n  }\r\n\r\n  const updateNote = async (oldNote, params) => {\r\n    const updatedNote = await NotesService.update(oldNote._id, params);\r\n    const index = notes.indexOf(oldNote);\r\n    const newNotes = notes;\r\n    newNotes[index] = updatedNote.data;\r\n    setNotes(newNotes);\r\n    setCurrentNote(updatedNote.data);\r\n  }\r\n\r\n  const searchNotes = async (query) => {\r\n    const response = await NotesService.search(query);\r\n    //console.log('xablau' ,response.data);\r\n    setNotes(response.data);\r\n    \r\n  }\r\n\r\n  const selectNote = (id) => {\r\n    const note = notes.find((note) => {\r\n      return note._id == id;\r\n    })\r\n    setCurrentNote(note);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Column.Group className=\"notes\" id=\"notes\">\r\n        <Menu\r\n          pageWrapId={\"notes-editor\"}\r\n          isOpen={props.isOpen}\r\n          onStateChange={(state) => props.setIsOpen(state.isOpen)}\r\n          disableAutoFocus\r\n          outerContainerId={\"notes\"}\r\n          customBurgerIcon={false}\r\n          customCrossIcon={false}\r\n        >\r\n          <Column.Group>\r\n            <Column size={10} offset={1}>\r\n              <Search searchNotes={searchNotes} fetchNotes={fetchNotes}/>\r\n            </Column>\r\n          </Column.Group>\r\n          <List\r\n            notes={notes}\r\n            selectNote={selectNote}\r\n            current_note={current_note} \r\n            deleteNote={deleteNote}\r\n            createNote={createNote}/>\r\n        </Menu>\r\n\r\n\r\n        <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\r\n          <Editor \r\n            note={current_note}\r\n            updateNote={updateNote}  \r\n          />\r\n        </Column>\r\n      </Column.Group>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Notes;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\services\\note.js",[],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\list\\index.js",["140"],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\editor\\index.js",["141"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport ReactQuill from 'react-quill'; // ES6\r\nimport 'react-quill/dist/quill.snow.css'; // ES6\r\n\r\nfunction Editor(props) {\r\n  const [currentContent, setCurrentContent] = useState('')\r\n  const [timer, setTimer] = useState(null)\r\n\r\n  const updateNote = (content) => {\r\n    const title = content.replace(/(<([^>]+)>)/ig, \"\").slice(0, 30);\r\n    props.updateNote(props.note, {'title': title, 'body': content})\r\n  }\r\n\r\n\r\n  const handleChange = (content, delta, source) =>{\r\n    clearTimeout(timer);\r\n    if(source == 'user'){\r\n      setCurrentContent(content)\r\n      setTimer(setTimeout(() => updateNote(content), 2000))\r\n    }\r\n  }\r\n\r\n  useEffect(()=> {\r\n    setCurrentContent(props.note.body)\r\n  }, [props.note])\r\n\r\n  const modules = {\r\n    toolbar: [\r\n      [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote', 'code-block'],\r\n      [{'list': 'ordered'}, {'list': 'bullet'}, \r\n       {'indent': '-1'}, {'indent': '+1'}],\r\n      ['link'],\r\n      ['clean'],\r\n    ]\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ReactQuill value={currentContent} modules={modules} onChange={handleChange}/>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Editor;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\notes\\search\\index.js",["142"],"import React, { useState } from 'react';\r\nimport { Input, Column } from \"rbx\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Search(props) {\r\n    const [query, setQuery] = useState(\"\")\r\n\r\n    const handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            props.searchNotes(query)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Column.Group className=\"is-vcentered\" breakpoint=\"mobile\">\r\n            <Column size=\"9\" offset={1}>\r\n                <Input type=\"text\"\r\n                    name={query}\r\n                    value={query}\r\n                    placeholder=\"Procurar nota...\"\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    onKeyDown={handleKeyDown} />\r\n            </Column>\r\n            <Column mobile={2} size={1}>\r\n                <a href=\"#\" onClick={() => {\r\n                    props.fetchNotes()\r\n                    setQuery('')\r\n                }}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTimes}\r\n                        color=\"grey\"\r\n                        className=\"is-pulled-left  \"\r\n                    />\r\n                </a>\r\n            </Column>\r\n        </Column.Group>\r\n    )\r\n}\r\n\r\nexport default Search;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\users\\user_edit_form\\index.js",["143","144","145"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\r\nimport UserService from '../../../services/users';\r\n\r\nfunction UsersEditForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const initializeUser = async () => {\r\n    const user = await JSON.parse(localStorage.getItem('user'));\r\n    setName(user['name']);\r\n    setEmail(user['email']);\r\n  }\r\n\r\n  useEffect(() =>{\r\n    initializeUser()    \r\n  }, [])\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    try {\r\n      await UserService.update({ email: email, name: name });\r\n      setStatus(\"success\")\r\n    } catch (err) {\r\n      setStatus(\"error\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Full Name</Label>\r\n            <Input\r\n              type=\"name\"\r\n              value={name || \"\"}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n              name=\"name\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              value={email || \"\"}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n              name=\"email\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n\r\n        <Field>\r\n          <Control>\r\n            <Column.Group>\r\n              <Column className=\"has-text-right\">\r\n                <Button color=\"custom-purple\" outlined>Update</Button>\r\n              </Column>\r\n            </Column.Group>\r\n          </Control>\r\n        </Field>\r\n        {status == \"error\" &&\r\n          <Help color=\"danger\">Problem in update</Help>\r\n        }\r\n        {status == \"success\" &&\r\n          <Help color=\"primary\">Updated with success</Help>\r\n        }\r\n      </form>\r\n    </Fragment>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default UsersEditForm;","C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\users\\user_edit_password_form\\index.js",["146","147","148","149","150"],"C:\\Users\\Rodrigo\\Desktop\\projetos\\notasReact\\javascript_note\\src\\components\\users\\user_delete\\index.js",["151"],"import React, { useState } from 'react';\r\nimport { Button } from 'rbx';\r\nimport UserService from '../../../services/users';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction UsersDelete(){\r\n    const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n    const deleteUser= async ()=>{\r\n        if (window.confirm('Tem certeza que deseja deletar esta conta? ')){\r\n            UserService.delete()\r\n            setRedirectToHome(true)\r\n        }\r\n    }\r\n\r\n    if(redirectToHome == true)\r\n    return <Redirect to={{pathname: '/'}}/>\r\n\r\n    return(\r\n        <Button color=\"danger\" onClick={()=> deleteUser()}> Excluir Conta </Button>\r\n    )\r\n}\r\n\r\nexport default UsersDelete;",{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":22},{"ruleId":"156","severity":1,"message":"160","line":2,"column":24,"nodeType":"158","messageId":"159","endLine":2,"endColumn":31},{"ruleId":"156","severity":1,"message":"161","line":3,"column":29,"nodeType":"158","messageId":"159","endLine":3,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":14,"column":25,"nodeType":"164","endLine":14,"endColumn":48},{"ruleId":"162","severity":1,"message":"163","line":32,"column":29,"nodeType":"164","endLine":32,"endColumn":60},{"ruleId":"162","severity":1,"message":"163","line":21,"column":49,"nodeType":"164","endLine":21,"endColumn":72},{"ruleId":"162","severity":1,"message":"163","line":25,"column":49,"nodeType":"164","endLine":25,"endColumn":89},{"ruleId":"156","severity":1,"message":"165","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"166","line":2,"column":51,"nodeType":"158","messageId":"159","endLine":2,"endColumn":57},{"ruleId":"156","severity":1,"message":"160","line":2,"column":49,"nodeType":"158","messageId":"159","endLine":2,"endColumn":56},{"ruleId":"167","severity":1,"message":"168","line":33,"column":18,"nodeType":"169","messageId":"170","endLine":33,"endColumn":20},{"ruleId":"156","severity":1,"message":"171","line":35,"column":15,"nodeType":"158","messageId":"159","endLine":35,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":45,"column":23,"nodeType":"169","messageId":"170","endLine":45,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":113,"column":21,"nodeType":"164","endLine":113,"endColumn":115},{"ruleId":"156","severity":1,"message":"160","line":2,"column":49,"nodeType":"158","messageId":"159","endLine":2,"endColumn":56},{"ruleId":"167","severity":1,"message":"168","line":15,"column":27,"nodeType":"169","messageId":"170","endLine":15,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":17,"column":29,"nodeType":"169","messageId":"170","endLine":17,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":64,"column":23,"nodeType":"164","endLine":64,"endColumn":120},{"ruleId":"156","severity":1,"message":"174","line":2,"column":18,"nodeType":"158","messageId":"159","endLine":2,"endColumn":27},{"ruleId":"156","severity":1,"message":"175","line":13,"column":18,"nodeType":"158","messageId":"159","endLine":13,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":20,"column":24,"nodeType":"169","messageId":"170","endLine":20,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":30,"column":29,"nodeType":"164","endLine":30,"endColumn":74},{"ruleId":"172","severity":1,"message":"176","line":76,"column":41,"nodeType":"164","endLine":76,"endColumn":77},{"ruleId":"156","severity":1,"message":"166","line":2,"column":18,"nodeType":"158","messageId":"159","endLine":2,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":52,"column":23,"nodeType":"169","messageId":"170","endLine":52,"endColumn":25},{"ruleId":"167","severity":1,"message":"168","line":29,"column":97,"nodeType":"169","messageId":"170","endLine":29,"endColumn":99},{"ruleId":"167","severity":1,"message":"168","line":18,"column":15,"nodeType":"169","messageId":"170","endLine":18,"endColumn":17},{"ruleId":"172","severity":1,"message":"176","line":26,"column":17,"nodeType":"164","endLine":29,"endColumn":20},{"ruleId":"156","severity":1,"message":"177","line":2,"column":49,"nodeType":"158","messageId":"159","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"168","line":68,"column":17,"nodeType":"169","messageId":"170","endLine":68,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":71,"column":17,"nodeType":"169","messageId":"170","endLine":71,"endColumn":19},{"ruleId":"156","severity":1,"message":"177","line":2,"column":49,"nodeType":"158","messageId":"159","endLine":2,"endColumn":54},{"ruleId":"167","severity":1,"message":"168","line":18,"column":17,"nodeType":"169","messageId":"170","endLine":18,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":68,"column":17,"nodeType":"169","messageId":"170","endLine":68,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":71,"column":17,"nodeType":"169","messageId":"170","endLine":71,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":74,"column":17,"nodeType":"169","messageId":"170","endLine":74,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":16,"column":23,"nodeType":"169","messageId":"170","endLine":16,"endColumn":25},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Notification' is defined but never used.","Identifier","unusedVar","'Section' is defined but never used.","'Block' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Column' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'setName' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Title' is defined but never used.","no-global-assign","no-unsafe-negation"]