{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\users\\\\upload_img\\\\ReactUploadImage.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport React, { useState, useEffect } from 'react';\nimport Api from '../../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL_API = 'http://localhost:3001';\n\nfunction ReactUploadImage() {\n  _s();\n\n  const filesElement = useRef(null);\n  const [imageSrc, setImage] = useState('');\n  var xabula = imageSrc.value;\n\n  const sendFile = async e => {\n    e.preventDefault();\n    localStorage.getItem('welcome-app/xabula', imageSrc); //window.location.reload();\n\n    const dataForm = new FormData();\n\n    for (const file of filesElement.current.files) {\n      dataForm.append('file', file);\n    } //dataForm.append('nomeUsuario', 'João');\n\n\n    const res = await fetch(`${URL_API}/posts`, {\n      method: 'POST',\n      body: dataForm\n    });\n    const data = await res.json();\n    setImage(URL_API + data.caminho); //console.log(imageSrc);\n\n    console.log(xabula);\n  }; //let pessoa = {nome: 'Matheus', idade: 29}\n  // Transformar o objeto em string e salvar em localStorage\n  //localStorage.setItem('img', JSON.stringify(imageSrc));\n  // Receber a string\n  //let pessoaString = localStorage.getItem('img');\n  // transformar em objeto novamente\n  //let pessoaObj = JSON.parse(pessoaString);\n\n  /* console.log(pessoaString); // Matheus\r\n  \r\n  localStorage.setItem(\"key_da_propriedade\",imageSrc);\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      ref: filesElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendFile,\n      children: \"Send file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: imageSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactUploadImage, \"8QkN05b+H30u+gD9DGfBFoE3Lns=\");\n\n_c = ReactUploadImage;\nexport default ReactUploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactUploadImage\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/users/upload_img/ReactUploadImage.js"],"names":["useRef","React","useState","useEffect","Api","URL_API","ReactUploadImage","filesElement","imageSrc","setImage","xabula","value","sendFile","e","preventDefault","localStorage","getItem","dataForm","FormData","file","current","files","append","res","fetch","method","body","data","json","caminho","console","log"],"mappings":";;;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAE1B,QAAMC,YAAY,GAAGP,MAAM,CAAC,IAAD,CAA3B;AACA,QAAM,CAACQ,QAAD,EAAWC,QAAX,IAAuBP,QAAQ,CAAC,EAAD,CAArC;AAGE,MAAIQ,MAAM,GAAGF,QAAQ,CAACG,KAAtB;;AAEF,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,oBAArB,EAA2CR,QAA3C,EAF0B,CAI1B;;AAEF,UAAMS,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,SAAK,MAAMC,IAAX,IAAmBZ,YAAY,CAACa,OAAb,CAAqBC,KAAxC,EAA+C;AAC7CJ,MAAAA,QAAQ,CAACK,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACD,KAT2B,CAU5B;;;AAEA,UAAMI,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEnB,OAAQ,QAAZ,EAAqB;AAC1CoB,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,IAAI,EAAET;AAFoC,KAArB,CAAvB;AAIA,UAAMU,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AAEAnB,IAAAA,QAAQ,CAACJ,OAAO,GAAGsB,IAAI,CAACE,OAAhB,CAAR,CAlB4B,CAmB5B;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AAGD,GAvBD,CAR0B,CAkC5B;AAEA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAKE,sBAEE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,MAA3B;AAA4B,MAAA,GAAG,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEK,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,gBAASJ;AAAT;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAWD;;GAhEQF,gB;;KAAAA,gB;AAkET,eAAeA,gBAAf","sourcesContent":["\r\nimport { useRef } from 'react';\r\nimport React,{useState, useEffect} from 'react'\r\nimport Api from '../../../services/api';\r\n\r\nconst URL_API = 'http://localhost:3001';\r\n\r\nfunction ReactUploadImage() {\r\n\r\n  const filesElement = useRef(null);\r\n  const [imageSrc, setImage] = useState('');\r\n\r\n  \r\n    var xabula = imageSrc.value;\r\n   \r\n  const sendFile = async (e) => {\r\n      e.preventDefault(); \r\n      localStorage.getItem('welcome-app/xabula', imageSrc);\r\n    \r\n      //window.location.reload();\r\n\r\n    const dataForm = new FormData();\r\n    for (const file of filesElement.current.files) {\r\n      dataForm.append('file', file);\r\n    }\r\n    //dataForm.append('nomeUsuario', 'João');\r\n\r\n    const res = await fetch(`${URL_API}/posts`, {\r\n      method: 'POST',\r\n      body: dataForm,\r\n    });\r\n    const data = await res.json();\r\n\r\n    setImage(URL_API + data.caminho)\r\n    //console.log(imageSrc);\r\n    console.log(xabula);\r\n    \r\n  \r\n  };\r\n\r\n\r\n//let pessoa = {nome: 'Matheus', idade: 29}\r\n\r\n// Transformar o objeto em string e salvar em localStorage\r\n//localStorage.setItem('img', JSON.stringify(imageSrc));\r\n\r\n// Receber a string\r\n//let pessoaString = localStorage.getItem('img');\r\n\r\n// transformar em objeto novamente\r\n//let pessoaObj = JSON.parse(pessoaString);\r\n\r\n/* console.log(pessoaString); // Matheus\r\n\r\nlocalStorage.setItem(\"key_da_propriedade\",imageSrc);\r\n */\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div >\r\n      <input type=\"file\" multiple ref={filesElement}/>\r\n      <button onClick={sendFile}>Send file</button>\r\n    \r\n    {/*   <img src={imageSrc}/> */}\r\n      <strong>{imageSrc}</strong>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default ReactUploadImage;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}