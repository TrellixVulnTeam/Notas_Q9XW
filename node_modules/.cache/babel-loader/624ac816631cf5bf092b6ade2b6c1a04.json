{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\auth\\\\register_form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from 'rbx';\nimport { Redirect } from 'react-router-dom';\nimport UserService from '../../../services/users';\n/* teste */\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\n/* teste */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassoword] = useState(\"\");\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\n  const [error, setError] = useState(false);\n  /* teste */\n\n  const [values, setValues] = useState({\n    senha: \"\",\n    aparecerSenha: false\n  });\n\n  const handleClickShowPassowrd = () => {\n    setValues({ ...values,\n      aparecerSenha: !values.aparecerSenha\n    });\n  };\n\n  const handleMouseDownPassord = e => {\n    e.preventDefault();\n  };\n\n  const handlePassowrdChange = prop => e => {\n    setValues({ ...values,\n      [prop]: e.target.value\n    });\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (password == confirmPassword) {\n      try {\n        const user = await UserService.register({\n          name: name,\n          password: password,\n          email: email\n        });\n        setRedirectToLogin(true);\n      } catch (error) {\n        setError(true);\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  if (redirectToLogin == true) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          size: 12,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"name\",\n                required: true,\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                required: true,\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Senha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                required: true,\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Confirmar Senha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                id: \"senha\" //type=\"password\" \n                ,\n                type: values.aparecerSenha ? \"text\" : \"password\",\n                required: true,\n                name: \"confirmPassword\" //value={confirmPassword}\n                ,\n                value: value.senha,\n                onChange: e => setConfirmPassoword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Column.Group, {\n                breakpoint: \"mobile\",\n                children: [/*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: e => setRedirectToLogin(true),\n                    className: \"button is-white has-text-custom-purple\",\n                    children: \"Entrar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"custom-purple\",\n                    outlined: true,\n                    children: \"Registro\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(Help, {\n            color: \"danger\",\n            children: \"Email ou senha incorretas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterForm, \"WbO3KbTy5FrBRqHEijEimicmPVk=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/auth/register_form/index.js"],"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Section","Help","Label","Redirect","UserService","FontAwesomeIcon","faTrash","faEye","faEyeSlash","RegisterForm","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassoword","redirectToLogin","setRedirectToLogin","error","setError","values","setValues","senha","aparecerSenha","handleClickShowPassowrd","handleMouseDownPassord","e","preventDefault","handlePassowrdChange","prop","target","value","handleSubmit","evt","user","register","pathname"],"mappings":"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","sourcesContent":["import React,{ Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from 'rbx';\r\nimport { Redirect } from 'react-router-dom' \r\nimport UserService from '../../../services/users';\r\n/* teste */\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons'\r\n/* teste */\r\n\r\nfunction RegisterForm(){\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassoword] = useState(\"\");\r\n    const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n/* teste */\r\n    const [values, setValues] = useState({\r\n      senha: \"\",\r\n      aparecerSenha: false,\r\n    });\r\n  \r\n    const handleClickShowPassowrd = ()=>{\r\n      setValues({...values, aparecerSenha: !values.aparecerSenha})\r\n    };\r\n  \r\n    const handleMouseDownPassord = (e)=>{\r\n      e.preventDefault();\r\n    }\r\n  \r\n    const handlePassowrdChange = (prop)=>(e)=>{\r\n      setValues({...values, [prop]:e.target.value});\r\n    };\r\n    \r\n\r\n    const handleSubmit = async (evt)=>{\r\n        evt.preventDefault();\r\n\r\n        if(password == confirmPassword){\r\n        try {\r\n            const user = await UserService.register({name: name, password: password, email: email});\r\n            setRedirectToLogin(true)\r\n        } catch (error) {\r\n            setError(true)\r\n        }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n    if(redirectToLogin == true)\r\n    return <Redirect to={{pathname: \"/login\"}}/>\r\n\r\n\r\n  \r\n    return(\r\n        <Fragment>\r\n        <Column.Group centered>\r\n          <form onSubmit={handleSubmit}>\r\n            <Column size={12}>\r\n              <Field>\r\n                <Label size=\"small\">Nome:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"name\"\r\n                    required\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={ e => setName(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Email:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"email\" \r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={ e => setEmail(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n              <Field>\r\n                <Label size=\"small\">Senha:</Label>\r\n                <Control>\r\n                  <Input \r\n                    type=\"password\" \r\n                    required\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={ e=> setPassword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n{/* teste */}\r\n              <Field>\r\n                <Label size=\"small\">Confirmar Senha:</Label>\r\n                <Control>\r\n                  <Input \r\n                    id=\"senha\"\r\n                    //type=\"password\" \r\n                    type={values.aparecerSenha ? \"text\" : \"password\"}\r\n                    required\r\n                    name=\"confirmPassword\"\r\n                    //value={confirmPassword}\r\n                    value={value.senha}\r\n                    onChange={ e=> setConfirmPassoword(e.target.value)}\r\n                  />\r\n                </Control>\r\n              </Field>\r\n{/* teste */}\r\n              <Field>\r\n                <Control>\r\n                  <Column.Group breakpoint=\"mobile\">\r\n                    <Column>\r\n                      <a onClick={e => setRedirectToLogin(true)} className=\"button is-white has-text-custom-purple\">Entrar</a>\r\n                    </Column>\r\n                    <Column>\r\n                      <Button color=\"custom-purple\" outlined>Registro</Button>\r\n                    </Column>\r\n                  </Column.Group>\r\n                </Control>\r\n              </Field>\r\n              { error && <Help color=\"danger\">Email ou senha incorretas</Help> }\r\n            </Column>\r\n          </form>\r\n        </Column.Group>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}