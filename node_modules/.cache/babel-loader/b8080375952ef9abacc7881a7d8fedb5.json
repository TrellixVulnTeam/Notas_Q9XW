{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\notes\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu';\nimport List from \"../notes/list\";\nimport Editor from \"../notes/editor\";\nimport Search from \"../notes/search\";\nimport NotesService from '../../services/note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Notes(props) {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [current_note, setCurrentNote] = useState({\n    title: \"\",\n    body: \"\",\n    id: \"\"\n  });\n\n  async function fetchNotes() {\n    const response = await NotesService.index();\n\n    if (response.data.length >= 1) {\n      setNotes(response.data.reverse());\n      setCurrentNote(response.data[0]);\n    } else {\n      setNotes([]);\n    }\n  }\n\n  const createNote = async () => {\n    await NotesService.create();\n    fetchNotes();\n  };\n\n  const deleteNote = async note => {\n    await NotesService.delete(true); //await NotesService.delete(note._id);\n\n    fetchNotes();\n  };\n\n  const updateNote = async (oldNote, params) => {\n    const updatedNote = await NotesService.update(oldNote._id, params);\n    const index = notes.indexOf(oldNote);\n    const newNotes = notes;\n    newNotes[index] = updatedNote.data;\n    setNotes(newNotes);\n    setCurrentNote(updatedNote.data);\n  };\n\n  const searchNotes = async query => {\n    const response = await NotesService.search(query); //console.log('xablau' ,response.data);\n\n    setNotes(response.data);\n  };\n\n  const selectNote = id => {\n    const note = notes.find(note => {\n      return note._id == id;\n    });\n    setCurrentNote(note);\n  };\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      className: \"notes\",\n      id: \"notes\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        pageWrapId: \"notes-editor\",\n        isOpen: props.isOpen,\n        onStateChange: state => props.setIsOpen(state.isOpen),\n        disableAutoFocus: true,\n        outerContainerId: \"notes\",\n        customBurgerIcon: false,\n        customCrossIcon: false,\n        children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            size: 10,\n            offset: 1,\n            children: /*#__PURE__*/_jsxDEV(Search, {\n              searchNotes: searchNotes,\n              fetchNotes: fetchNotes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          notes: notes,\n          selectNote: selectNote,\n          current_note: current_note,\n          deleteNote: deleteNote,\n          createNote: createNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        size: 12,\n        className: \"notes-editor\",\n        id: \"notes-editor\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          note: current_note,\n          updateNote: updateNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Notes, \"EGRBH0YG/KxrdYJu4/WeV9xm4Xo=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/notes/index.js"],"names":["React","Fragment","useEffect","useState","Column","Button","push","Menu","List","Editor","Search","NotesService","Notes","props","notes","setNotes","current_note","setCurrentNote","title","body","id","fetchNotes","response","index","data","length","reverse","createNote","create","deleteNote","note","delete","updateNote","oldNote","params","updatedNote","update","_id","indexOf","newNotes","searchNotes","query","search","selectNote","find","isOpen","state","setIsOpen"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Column, Button } from \"rbx\";\r\nimport \"../../styles/notes.scss\";\r\nimport { push as Menu } from 'react-burger-menu'\r\nimport List from \"../notes/list\";\r\nimport Editor from \"../notes/editor\";\r\nimport Search from \"../notes/search\";\r\nimport NotesService from '../../services/note';\r\n\r\nfunction Notes(props) {\r\n  const [notes, setNotes] = useState([]);\r\n  const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\r\n\r\n  async function fetchNotes() {\r\n    const response = await NotesService.index();\r\n    if (response.data.length >= 1) {\r\n      setNotes(response.data.reverse())\r\n      setCurrentNote(response.data[0])\r\n    } else {\r\n      setNotes([]);\r\n    }\r\n  }\r\n\r\n  const createNote = async () => {\r\n    await NotesService.create();\r\n    fetchNotes();\r\n  }\r\n\r\n  const deleteNote = async (note) => {\r\n    await NotesService.delete(true);\r\n    //await NotesService.delete(note._id);\r\n    fetchNotes();\r\n  }\r\n\r\n  const updateNote = async (oldNote, params) => {\r\n    const updatedNote = await NotesService.update(oldNote._id, params);\r\n    const index = notes.indexOf(oldNote);\r\n    const newNotes = notes;\r\n    newNotes[index] = updatedNote.data;\r\n    setNotes(newNotes);\r\n    setCurrentNote(updatedNote.data);\r\n  }\r\n\r\n  const searchNotes = async (query) => {\r\n    const response = await NotesService.search(query);\r\n    //console.log('xablau' ,response.data);\r\n    setNotes(response.data);\r\n    \r\n  }\r\n\r\n  const selectNote = (id) => {\r\n    const note = notes.find((note) => {\r\n      return note._id == id;\r\n    })\r\n    setCurrentNote(note);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Column.Group className=\"notes\" id=\"notes\">\r\n        <Menu\r\n          pageWrapId={\"notes-editor\"}\r\n          isOpen={props.isOpen}\r\n          onStateChange={(state) => props.setIsOpen(state.isOpen)}\r\n          disableAutoFocus\r\n          outerContainerId={\"notes\"}\r\n          customBurgerIcon={false}\r\n          customCrossIcon={false}\r\n        >\r\n          <Column.Group>\r\n            <Column size={10} offset={1}>\r\n              <Search searchNotes={searchNotes} fetchNotes={fetchNotes}/>\r\n            </Column>\r\n          </Column.Group>\r\n          <List\r\n            notes={notes}\r\n            selectNote={selectNote}\r\n            current_note={current_note} \r\n            deleteNote={deleteNote}\r\n            createNote={createNote}/>\r\n        </Menu>\r\n\r\n\r\n        <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\r\n          <Editor \r\n            note={current_note}\r\n            updateNote={updateNote}  \r\n          />\r\n        </Column>\r\n      </Column.Group>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Notes;"]},"metadata":{},"sourceType":"module"}