{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\notes\\\\list\\\\index.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Column, Tag, Title, List } from \"rbx\";\nimport Moment from 'moment';\nimport \"../../../styles/notes.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListNotes(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n      breakpoint: \"mobile\",\n      children: /*#__PURE__*/_jsxDEV(Column, {\n        size: 6,\n        offset: 1,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          size: 6,\n          children: [props.notes.length, \" Notes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [props.notes.map((item, key) => /*#__PURE__*/_jsxDEV(List.Item, {\n        onClick: () => props.selectNote(item._id),\n        active: item == props.current_note,\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          size: 6,\n          children: item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          size: 6,\n          subtitle: true,\n          spaced: false,\n          children: item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column.Group, {\n          breakpoint: \"mobile\",\n          children: /*#__PURE__*/_jsxDEV(Column, {\n            size: 10,\n            children: /*#__PURE__*/_jsxDEV(Tag, {\n              color: \"dark\",\n              children: Moment(item.created_at).format('DD/MM')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(List.Item, {\n          active: true,\n          children: \"Announcements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(List.Item, {\n          children: \"Announcements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ListNotes;\nexport default ListNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListNotes\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/notes/list/index.js"],"names":["React","Fragment","Button","Column","Tag","Title","List","Moment","ListNotes","props","notes","length","map","item","key","selectNote","_id","current_note","title","replace","substring","body","created_at","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,IAArC,QAAiD,KAAjD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,4BAAP;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,UAAU,EAAC,QAAzB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,CAAd;AAAiB,QAAA,MAAM,EAAE,CAAzB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAb;AAAA,qBACGA,KAAK,CAACC,KAAN,CAAYC,MADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD;AAAA,iBACGF,KAAK,CAACC,KAAN,CAAYE,GAAZ,CAAgB,CAACC,IAAD,EAAOC,GAAP,kBACf,QAAC,IAAD,CAAM,IAAN;AAAqB,QAAA,OAAO,EAAE,MAAML,KAAK,CAACM,UAAN,CAAiBF,IAAI,CAACG,GAAtB,CAApC;AAAgE,QAAA,MAAM,EAAEH,IAAI,IAAIJ,KAAK,CAACQ,YAAtF;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAb;AAAA,oBACGJ,IAAI,CAACK,KAAL,CAAWC,OAAX,CAAmB,eAAnB,EAAoC,EAApC,EAAwCC,SAAxC,CAAkD,CAAlD,EAAoD,EAApD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAb;AAAgB,UAAA,QAAQ,MAAxB;AAAyB,UAAA,MAAM,EAAE,KAAjC;AAAA,oBACGP,IAAI,CAACQ,IAAL,CAAUF,OAAV,CAAkB,eAAlB,EAAmC,EAAnC,EAAuCC,SAAvC,CAAiD,CAAjD,EAAmD,EAAnD;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE,QAAC,MAAD,CAAQ,KAAR;AAAc,UAAA,UAAU,EAAC,QAAzB;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAE,EAAd;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,KAAK,EAAC,MAAX;AAAA,wBACGb,MAAM,CAACM,IAAI,CAACS,UAAN,CAAN,CAAwBC,MAAxB,CAA+B,OAA/B;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAAgBT,GAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CADH,eAoBE,QAAC,IAAD;AAAA,gCACA,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;KArCQN,S;AAuCT,eAAeA,SAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Button, Column, Tag, Title, List } from \"rbx\";\r\nimport Moment from 'moment';\r\nimport \"../../../styles/notes.scss\";\r\n\r\nfunction ListNotes(props) {\r\n  return (\r\n    <Fragment>\r\n      <Column.Group breakpoint=\"mobile\">\r\n        <Column size={6} offset={1}>\r\n          <Title size={6}>\r\n            {props.notes.length} Notes\r\n          </Title>\r\n        </Column>\r\n      </Column.Group>\r\n      <List >\r\n        {props.notes.map((item, key) =>\r\n          <List.Item key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\r\n            <Title size={6}>\r\n              {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0,15)}\r\n            </Title>\r\n            <Title size={6} subtitle spaced={false}>\r\n              {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0,30)}\r\n            </Title>\r\n\r\n            <Column.Group breakpoint=\"mobile\">\r\n              <Column size={10}>\r\n                <Tag color=\"dark\">\r\n                  {Moment(item.created_at).format('DD/MM')}\r\n                </Tag>\r\n              </Column>\r\n            </Column.Group>\r\n          </List.Item>\r\n        )}\r\n\r\n        <List>\r\n        <List.Item active>Announcements</List.Item>\r\n        <List.Item >Announcements</List.Item>\r\n        </List>\r\n      </List>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListNotes;"]},"metadata":{},"sourceType":"module"}