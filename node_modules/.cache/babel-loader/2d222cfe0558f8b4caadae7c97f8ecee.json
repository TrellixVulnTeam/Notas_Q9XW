{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\users\\\\user_edit_password_form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UserService from '../../../services/users';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersEditFormPassword() {\n  _s();\n\n  const [password, setPassword] = useState(\"\");\n  const [password_confirmation, setPasswordConfirmation] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (password == password_confirmation) {\n      try {\n        await UserService.updatePassword({\n          password: password\n        });\n        setStatus(\"success\");\n      } catch (err) {\n        setStatus(\"error\");\n      }\n    } else {\n      setStatus(\"error_confirmation_password\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Confirme Sua Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password_confirmation,\n            onChange: e => setPasswordConfirmation(e.target.value),\n            required: true,\n            name: \"password_confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Column.Group, {\n            children: /*#__PURE__*/_jsxDEV(Column, {\n              className: \"has-text-right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"custom-purple\",\n                outlined: true,\n                children: \"Atualizar Senha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), status == \"error_update\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"danger\",\n        children: \"Falha ao atualizar senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), status == \"error_confirmation_password\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"danger\",\n        children: \"Senhas Incorretas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), status == \"success\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"primary\",\n        children: \"Atualizada com sucesso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersEditFormPassword, \"ORbSBcslI6NVH9z8U/9HO/JtM0E=\");\n\n_c = UsersEditFormPassword;\nexport default UsersEditFormPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersEditFormPassword\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/users/user_edit_password_form/index.js"],"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Title","Help","Label","UserService","UsersEditFormPassword","password","setPassword","password_confirmation","setPasswordConfirmation","status","setStatus","handleSubmit","evt","preventDefault","updatePassword","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\r\nimport UserService from '../../../services/users';\r\n\r\n\r\n\r\n\r\nfunction UsersEditFormPassword() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password_confirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [status, setStatus] = useState(null);\r\n\r\n  \r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if(password == password_confirmation){\r\n      try {\r\n        await UserService.updatePassword({ password: password });\r\n        setStatus(\"success\")\r\n      } catch (err) {\r\n        setStatus(\"error\")\r\n      }\r\n    } else{\r\n      setStatus(\"error_confirmation_password\")\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Senha</Label>\r\n            <Input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              required\r\n              name=\"password\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Confirme Sua Senha</Label>\r\n            <Input\r\n              type=\"password\"\r\n              value={password_confirmation}\r\n              onChange={e => setPasswordConfirmation(e.target.value)}\r\n              required\r\n              name=\"password_confirmation\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n\r\n        <Field>\r\n          <Control>\r\n            <Column.Group>\r\n              <Column className=\"has-text-right\">\r\n                <Button color=\"custom-purple\" outlined>Atualizar Senha</Button>\r\n              </Column>\r\n            </Column.Group>\r\n          </Control>\r\n        </Field>\r\n        {status == \"error_update\" &&\r\n          <Help color=\"danger\">Falha ao atualizar senha</Help>\r\n        }\r\n        {status == \"error_confirmation_password\" &&\r\n          <Help color=\"danger\">Senhas Incorretas</Help>\r\n        }\r\n        {status == \"success\" &&\r\n          <Help color=\"primary\">Atualizada com sucesso</Help>\r\n        }\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default UsersEditFormPassword;"]},"metadata":{},"sourceType":"module"}