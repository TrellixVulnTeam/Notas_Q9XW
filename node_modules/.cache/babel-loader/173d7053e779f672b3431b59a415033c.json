{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\users\\\\upload_img\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label, File, Image } from \"rbx\";\nimport UserService from '../../../services/users';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction uploadImg() {\n  _s();\n\n  const [file, setFile] = useState(null);\n  /*   const initializeUser = async () => {\r\n      const user = await JSON.parse(localStorage.getItem('user'));\r\n      setName(user['name']);\r\n      setEmail(user['email']);\r\n    }\r\n  \r\n    useEffect(() =>{\r\n      initializeUser()    \r\n    }, [])\r\n  \r\n    const handleSubmit = async (evt) => {\r\n      evt.preventDefault();\r\n  \r\n      try {\r\n        await UserService.update({ email: email, name: name });\r\n        setStatus(\"success\")\r\n      } catch (err) {\r\n        setStatus(\"error\")\r\n      }\r\n    } */\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Field, {\n      children: /*#__PURE__*/_jsxDEV(Control, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: \"has-text-grey\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"file\",\n          name: \"file\",\n          onChange: e => setFile(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(uploadImg, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n\nexport default uploadImg;","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/users/upload_img/index.js"],"names":["React","Fragment","useState","useEffect","Button","Field","Control","Input","Column","Title","Help","Label","File","Image","UserService","FontAwesomeIcon","faUpload","uploadImg","file","setFile","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,KAAhD,EAAuDC,IAAvD,EAA6DC,KAA7D,EAAoEC,IAApE,EAA0EC,KAA1E,QAAuF,KAAvF;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,mCAAzB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,IAAD,CAAhC;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKE,sBACE,QAAC,QAAD;AAAA,2BA4BI,QAAC,KAAD;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAIE,UAAA,QAAQ,EAAEkB,CAAC,IAAID,OAAO,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAJxB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AA5BJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2ED;;GAtGQL,S;;AAwGT,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Button, Field, Control, Input, Column, Title, Help, Label, File, Image } from \"rbx\";\r\nimport UserService from '../../../services/users';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction uploadImg() {\r\n  const [file, setFile] = useState(null);\r\n\r\n/*   const initializeUser = async () => {\r\n    const user = await JSON.parse(localStorage.getItem('user'));\r\n    setName(user['name']);\r\n    setEmail(user['email']);\r\n  }\r\n\r\n  useEffect(() =>{\r\n    initializeUser()    \r\n  }, [])\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    try {\r\n      await UserService.update({ email: email, name: name });\r\n      setStatus(\"success\")\r\n    } catch (err) {\r\n      setStatus(\"error\")\r\n    }\r\n  } */\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <Fragment>\r\n     {/*  <form method=\"POST\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Nome</Label>\r\n            <Input\r\n              type=\"name\"\r\n              value={name || \"\"}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n              name=\"name\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              value={email || \"\"}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n              name=\"email\"\r\n            />\r\n          </Control>\r\n        </Field> */}\r\n\r\n\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Image</Label>\r\n            <Input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              \r\n              onChange={e => setFile(e.target.value)}             \r\n            />\r\n          </Control>\r\n        </Field>\r\n        \r\n     {/*    <Field>\r\n          <Control>\r\n            <Column.Group>\r\n              <Column className=\"has-text-right\">\r\n                <Button color=\"custom-purple\" outlined>Atualizar</Button>\r\n              </Column>\r\n            </Column.Group>\r\n          </Control>\r\n        </Field>\r\n        {status == \"error\" &&\r\n          <Help color=\"danger\">Falha ao Atualizar</Help>\r\n        }\r\n        {status == \"success\" &&\r\n          <Help color=\"primary\">Atualizado com sucesso</Help>\r\n        } */}\r\n        \r\n{/*                <File id=\"form\" enctype=\"multipart/form-data\">\r\n                <File.Label>\r\n                    <File.Input type=\"file\" name=\"photo\" />\r\n                    <File.CTA>\r\n                        <File.Icon>\r\n                            <FontAwesomeIcon icon={faUpload} />\r\n                        </File.Icon>\r\n                        <File.Label as=\"span\">Choose a File</File.Label>\r\n                    </File.CTA>\r\n                </File.Label>\r\n                <Button type=\"submit\" name=\"upload\">Upload</Button>\r\n                <Image id=\"avatar\" />\r\n            </File> */}\r\n\r\n     {/*  </form> */}\r\n    </Fragment>\r\n  )\r\n\r\n}\r\n\r\nexport default uploadImg;"]},"metadata":{},"sourceType":"module"}