{"ast":null,"code":"import Api from \"./api\";\nconst UserService = {\n  register: params => Api.post(\"/users/register\", params),\n  login: async params => {\n    const response = await Api.post(\"/users/login\", params);\n    localStorage.setItem('user', JSON.stringify(response.data.user));\n    localStorage.setItem('token', response.data.token);\n  },\n  logout: () => {\n    localStorage.removeItem('user', null);\n    localStorage.removeItem('token', null);\n  },\n  update: async params => {\n    const response = await Api.put(\"/users\", params, {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    localStorage.setItem('user', JSON.stringify(response.data));\n  },\n  updatePassword: async params => {\n    await Api.put('/users/password', params, {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n  },\n  getUpload: async params => {\n    await Api.post(\"/posts\", params, {\n      headers: {\n        'multipart/form-data': localStorage\n      }\n    });\n  },\n  delete: async () => {\n    await Api.delete('/users', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    localStorage.removeItem('user', null);\n    localStorage.removeItem('token', null);\n  }\n};\nexport default UserService;","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/services/users.js"],"names":["Api","UserService","register","params","post","login","response","localStorage","setItem","JSON","stringify","data","user","token","logout","removeItem","update","put","headers","getItem","updatePassword","getUpload","delete"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAGC,MAAD,IAAYH,GAAG,CAACI,IAAJ,CAAS,iBAAT,EAA4BD,MAA5B,CADJ;AAElBE,EAAAA,KAAK,EAAE,MAAOF,MAAP,IAAiB;AACtB,UAAMG,QAAQ,GAAG,MAAMN,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyBD,MAAzB,CAAvB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAT,CAAcC,IAA7B,CAA7B;AACAL,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,QAAQ,CAACK,IAAT,CAAcE,KAA5C;AACD,GANiB;AAOlBC,EAAAA,MAAM,EAAC,MAAK;AACVP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,MAAxB,EAAgC,IAAhC;AACAR,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB,EAAiC,IAAjC;AACD,GAViB;AAWlBC,EAAAA,MAAM,EAAE,MAAMb,MAAN,IAAe;AACrB,UAAMG,QAAQ,GAAG,MAAMN,GAAG,CAACiB,GAAJ,CAAQ,QAAR,EAAkBd,MAAlB,EAAyB;AAC9Ce,MAAAA,OAAO,EAAE;AAAC,0BAAkBX,YAAY,CAACY,OAAb,CAAqB,OAArB;AAAnB;AADqC,KAAzB,CAAvB;AAGEZ,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAA5B;AACH,GAhBiB;AAkBlBS,EAAAA,cAAc,EAAE,MAAMjB,MAAN,IAAe;AAC7B,UAAMH,GAAG,CAACiB,GAAJ,CAAQ,iBAAR,EAA2Bd,MAA3B,EAAkC;AACtCe,MAAAA,OAAO,EAAC;AAAE,0BAAkBX,YAAY,CAACY,OAAb,CAAqB,OAArB;AAApB;AAD8B,KAAlC,CAAN;AAGD,GAtBiB;AAwBlBE,EAAAA,SAAS,EAAE,MAAMlB,MAAN,IAAiB;AAC1B,UAAMH,GAAG,CAACI,IAAJ,CAAS,QAAT,EAAmBD,MAAnB,EAA0B;AAC9Be,MAAAA,OAAO,EAAC;AAAC,+BAAsBX;AAAvB;AADsB,KAA1B,CAAN;AAGD,GA5BiB;AA8BlBe,EAAAA,MAAM,EAAE,YAAS;AACf,UAAMtB,GAAG,CAACsB,MAAJ,CAAW,QAAX,EAAoB;AACxBJ,MAAAA,OAAO,EAAE;AAAC,0BAAkBX,YAAY,CAACY,OAAb,CAAqB,OAArB;AAAnB;AADe,KAApB,CAAN;AAGAZ,IAAAA,YAAY,CAACQ,UAAb,CAAwB,MAAxB,EAAgC,IAAhC;AACAR,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB,EAAiC,IAAjC;AACD;AApCiB,CAApB;AAuCA,eAAed,WAAf","sourcesContent":["import Api from \"./api\";\r\n\r\nconst UserService = {\r\n  register: (params) => Api.post(\"/users/register\", params),\r\n  login: async (params) =>{\r\n    const response = await Api.post(\"/users/login\", params)\r\n    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    localStorage.setItem('token', response.data.token);\r\n  },\r\n  logout:() =>{\r\n    localStorage.removeItem('user', null);\r\n    localStorage.removeItem('token', null);\r\n  },\r\n  update: async(params)=>{\r\n    const response = await Api.put(\"/users\", params,{\r\n      headers: {'x-access-token': localStorage.getItem('token')}\r\n       })\r\n      localStorage.setItem('user',JSON.stringify(response.data));\r\n  },\r\n  \r\n  updatePassword: async(params)=>{\r\n    await Api.put('/users/password', params,{\r\n      headers:{ 'x-access-token': localStorage.getItem('token')}\r\n    })\r\n  },\r\n  \r\n  getUpload: async(params) => { \r\n    await Api.post(\"/posts\", params,{\r\n      headers:{'multipart/form-data':localStorage}\r\n    })\r\n  },\r\n\r\n  delete: async()=>{\r\n    await Api.delete('/users',{\r\n      headers: {'x-access-token': localStorage.getItem('token')}\r\n    })\r\n    localStorage.removeItem('user', null)\r\n    localStorage.removeItem('token', null)\r\n  }\r\n}\r\n\r\nexport default UserService;"]},"metadata":{},"sourceType":"module"}