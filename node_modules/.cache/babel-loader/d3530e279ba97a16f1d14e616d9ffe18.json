{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\auth\\\\register_form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from 'rbx';\nimport { Redirect } from 'react-router-dom';\nimport UserService from '../../../services/users';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 11\n}, this);\n\nlet trash = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faTrash\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 13\n}, this);\n\nfunction RegisterForm() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassoword] = useState(\"\");\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\n  const [error, setError] = useState(false);\n  const [passwordShown, setPasswordShown] = useState(false);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    if (password == confirmPassword) {\n      try {\n        const user = await UserService.register({\n          name: name,\n          password: password,\n          email: email\n        });\n        setRedirectToLogin(true);\n      } catch (error) {\n        setError(true);\n      }\n    } else {\n      setError(true);\n    }\n  };\n\n  if (redirectToLogin == true) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Column.Group, {\n      centered: true,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Column, {\n          size: 12,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Nome:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"name\",\n                required: true,\n                name: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"email\",\n                required: true,\n                name: \"email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Senha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"password\",\n                required: true,\n                name: \"password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              size: \"small\",\n              children: \"Confirmar Senha:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Control, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                id: \"senha\" //type=\"password\" \n                ,\n                type: passwordShown ? \"text\" : \"password\",\n                required: true,\n                name: \"confirmPassword\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassoword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: togglePasswordVisiblity,\n                children: [\" \", passwordShown ? `${eye}` : `${trash}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            children: /*#__PURE__*/_jsxDEV(Control, {\n              children: /*#__PURE__*/_jsxDEV(Column.Group, {\n                breakpoint: \"mobile\",\n                children: [/*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: e => setRedirectToLogin(true),\n                    className: \"button is-white has-text-custom-purple\",\n                    children: \"Entrar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Column, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"custom-purple\",\n                    outlined: true,\n                    children: \"Registro\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Help, {\n            color: \"danger\",\n            children: \"Email ou senha incorretas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"ZKAYPvYArcGX1y50HshVsxEhHWU=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/auth/register_form/index.js"],"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Section","Help","Label","Redirect","UserService","FontAwesomeIcon","faEye","faTrash","eye","trash","RegisterForm","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassoword","redirectToLogin","setRedirectToLogin","error","setError","passwordShown","setPasswordShown","togglePasswordVisiblity","handleSubmit","evt","preventDefault","user","register","pathname","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from 'rbx';\r\nimport { Redirect } from 'react-router-dom'\r\nimport UserService from '../../../services/users';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nlet eye = <FontAwesomeIcon icon={faEye} />\r\nlet trash = <FontAwesomeIcon icon={faTrash} />\r\n\r\nfunction RegisterForm() {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassoword] = useState(\"\");\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n\r\n  };\r\n\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    if (password == confirmPassword) {\r\n      try {\r\n        const user = await UserService.register({ name: name, password: password, email: email });\r\n        setRedirectToLogin(true)\r\n      } catch (error) {\r\n        setError(true)\r\n      }\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  if (redirectToLogin == true)\r\n    return <Redirect to={{ pathname: \"/login\" }} />\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Column.Group centered>\r\n        <form onSubmit={handleSubmit}>\r\n          <Column size={12}>\r\n            <Field>\r\n              <Label size=\"small\">Nome:</Label>\r\n              <Control>\r\n                <Input\r\n                  type=\"name\"\r\n                  required\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={e => setName(e.target.value)}\r\n                />\r\n              </Control>\r\n            </Field>\r\n            <Field>\r\n              <Label size=\"small\">Email:</Label>\r\n              <Control>\r\n                <Input\r\n                  type=\"email\"\r\n                  required\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={e => setEmail(e.target.value)}\r\n                />\r\n              </Control>\r\n            </Field>\r\n            <Field>\r\n              <Label size=\"small\">Senha:</Label>\r\n              <Control>\r\n                <Input\r\n                  type=\"password\"\r\n                  required\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                />\r\n              </Control>\r\n            </Field>\r\n            {/* teste */}\r\n            <Field>\r\n              <Label size=\"small\">Confirmar Senha:</Label>\r\n              <Control>\r\n                <Input\r\n\r\n                  id=\"senha\"\r\n                  //type=\"password\" \r\n                  type={passwordShown ? \"text\" : \"password\"}\r\n                  required\r\n                  name=\"confirmPassword\"\r\n                  value={confirmPassword}\r\n                  onChange={e => setConfirmPassoword(e.target.value)}\r\n\r\n                />\r\n\r\n                  <div onClick={togglePasswordVisiblity}> {passwordShown ? `${eye}` : `${trash}` }</div>\r\n                 {/*  <div onClick={togglePasswordVisiblity}> {passwordShown ? `a` : `b` }</div> */}\r\n                 \r\n\r\n               \r\n\r\n\r\n\r\n              </Control>\r\n            </Field>\r\n            {/* teste */}\r\n            <Field>\r\n              <Control>\r\n                <Column.Group breakpoint=\"mobile\">\r\n                  <Column>\r\n                    <a onClick={e => setRedirectToLogin(true)} className=\"button is-white has-text-custom-purple\">Entrar</a>\r\n                  </Column>\r\n                  <Column>\r\n                    <Button color=\"custom-purple\" outlined>Registro</Button>\r\n                  </Column>\r\n                </Column.Group>\r\n              </Control>\r\n            </Field>\r\n            {error && <Help color=\"danger\">Email ou senha incorretas</Help>}\r\n          </Column>\r\n        </form>\r\n      </Column.Group>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}