{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\notes\\\\list\\\\index.js\";\nimport React, { Fragment } from 'react';\nimport { Button, Column, Tag, Title, List } from \"rbx\";\nimport Moment from 'moment';\nimport \"../../../styles/notes.scss\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListNotes(props) {\n  return (\n    /*#__PURE__*/\n\n    /*     <Fragment>\r\n          <Column.Group breakpoint=\"mobile\">\r\n            <Column size={6} offset={1}>\r\n              <Title size={6}>\r\n                {props.notes.length} Notes\r\n              </Title>\r\n            </Column>\r\n    \r\n            <Column size={2}>\r\n              <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\r\n                Notes +\r\n               </Button>\r\n            </Column>\r\n    \r\n          </Column.Group>\r\n          <List className=\"notes-list\">\r\n            {props.notes.map((item, key) =>\r\n              <List.Item as=\"div\" key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\r\n                <Title size={6}>\r\n                  {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)}\r\n                </Title>\r\n                <Title size={6} subtitle spaced={false}>\r\n                  {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)}\r\n                </Title>\r\n    \r\n                <Column.Group breakpoint=\"mobile\">\r\n                  <Column size={10}>\r\n                    <Tag color=\"dark\">\r\n                      {Moment(item.created_at).format('DD/MM')} \r\n                    </Tag>              \r\n                  </Column>\r\n                  <Column size={2}>\r\n                  <FontAwesomeIcon\r\n                    icon={faTrash}\r\n                    onClick={() => props.deleteNote(item)}\r\n                    color=\"grey\"\r\n                  />\r\n                </Column>\r\n                </Column.Group>\r\n              </List.Item>\r\n            )}\r\n          </List>\r\n        </Fragment> */\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Column.Group, {\n        breakpoint: \"mobile\",\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          size: 6,\n          offset: 1,\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            size: 6,\n            children: [props.notes.length, \" Notes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          size: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            state: \"active\",\n            color: \"custom-purple\",\n            outlined: true,\n            size: \"small\",\n            onClick: () => props.createNote(),\n            children: \"Notes +\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        className: \"notes-list\",\n        children: props.notes.map((item, key) => /*#__PURE__*/_jsxDEV(List.Item, {\n          onClick: () => props.selectNote(item._id),\n          active: item == props.current_note,\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            size: 6,\n            children: item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            size: 6,\n            subtitle: true,\n            spaced: false,\n            children: item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Column.Group, {\n            breakpoint: \"mobile\",\n            children: [/*#__PURE__*/_jsxDEV(Column, {\n              size: 10,\n              children: /*#__PURE__*/_jsxDEV(Tag, {\n                color: \"dark\",\n                children: Moment(item.created_at).format('DD/MM')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              size: 2,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrash,\n                onClick: () => props.deleteNote(item),\n                color: \"grey\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = ListNotes;\nexport default ListNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListNotes\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/notes/list/index.js"],"names":["React","Fragment","Button","Column","Tag","Title","List","Moment","FontAwesomeIcon","faTrash","ListNotes","props","notes","length","createNote","map","item","key","selectNote","_id","current_note","title","replace","substring","body","created_at","format","deleteNote"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Button, Column, Tag, Title, List } from \"rbx\";\r\nimport Moment from 'moment';\r\nimport \"../../../styles/notes.scss\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction ListNotes(props) {\r\n  return (\r\n/*     <Fragment>\r\n      <Column.Group breakpoint=\"mobile\">\r\n        <Column size={6} offset={1}>\r\n          <Title size={6}>\r\n            {props.notes.length} Notes\r\n          </Title>\r\n        </Column>\r\n\r\n        <Column size={2}>\r\n          <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\r\n            Notes +\r\n           </Button>\r\n        </Column>\r\n\r\n      </Column.Group>\r\n      <List className=\"notes-list\">\r\n        {props.notes.map((item, key) =>\r\n          <List.Item as=\"div\" key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\r\n            <Title size={6}>\r\n              {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0, 15)}\r\n            </Title>\r\n            <Title size={6} subtitle spaced={false}>\r\n              {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0, 30)}\r\n            </Title>\r\n\r\n            <Column.Group breakpoint=\"mobile\">\r\n              <Column size={10}>\r\n                <Tag color=\"dark\">\r\n                  {Moment(item.created_at).format('DD/MM')} \r\n                </Tag>              \r\n              </Column>\r\n              <Column size={2}>\r\n              <FontAwesomeIcon\r\n                icon={faTrash}\r\n                onClick={() => props.deleteNote(item)}\r\n                color=\"grey\"\r\n              />\r\n            </Column>\r\n            </Column.Group>\r\n          </List.Item>\r\n        )}\r\n      </List>\r\n    </Fragment> */\r\n\r\n\r\n    <Fragment>\r\n    <Column.Group breakpoint=\"mobile\">\r\n      <Column size={6} offset={1}>\r\n        <Title size={6}>\r\n          {props.notes.length} Notes\r\n        </Title>\r\n      </Column>\r\n      <Column size={2}>\r\n          <Button state=\"active\" color=\"custom-purple\" outlined size=\"small\" onClick={() => props.createNote()}>\r\n            Notes +\r\n           </Button>\r\n        </Column>\r\n    </Column.Group>\r\n    <List className=\"notes-list\">\r\n      {props.notes.map((item, key) =>\r\n        <List.Item key={key} onClick={() => props.selectNote(item._id)} active={item == props.current_note}>\r\n          <Title size={6}>\r\n            {item.title.replace(/(<([^>]+)>)/ig, \"\").substring(0,15)}\r\n          </Title>\r\n          <Title size={6} subtitle spaced={false}>\r\n            {item.body.replace(/(<([^>]+)>)/ig, \"\").substring(0,30)}\r\n          </Title>\r\n\r\n          <Column.Group breakpoint=\"mobile\">\r\n            <Column size={10}>\r\n              <Tag color=\"dark\">\r\n                {Moment(item.created_at).format('DD/MM')}\r\n              </Tag>\r\n            </Column>\r\n            <Column size={2}>\r\n              <FontAwesomeIcon\r\n                icon={faTrash}\r\n                onClick={() => props.deleteNote(item)}\r\n                color=\"grey\"\r\n              />\r\n            </Column>\r\n          </Column.Group>\r\n        </List.Item>\r\n      )}\r\n    </List>\r\n  </Fragment>\r\n  )\r\n}\r\n\r\nexport default ListNotes;"]},"metadata":{},"sourceType":"module"}