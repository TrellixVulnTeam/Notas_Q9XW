{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\projetos\\\\notasReact\\\\javascript_note\\\\src\\\\components\\\\users\\\\user_edit_form\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label, File, Image } from \"rbx\";\nimport UserService from '../../../services/users';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsersEditForm() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setName(user['name']);\n    setEmail(user['email']);\n    setPhoto(user['photo']);\n  };\n\n  useEffect(() => {\n    initializeUser();\n  }, []);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      await UserService.update({\n        email: email,\n        name: name,\n        photo: photo\n      });\n      setStatus(\"success\");\n    } catch (err) {\n      setStatus(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"name\",\n            value: name || \"\",\n            onChange: e => setName(e.target.value),\n            required: true,\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            value: email || \"\",\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            className: \"has-text-grey\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"file\",\n            value: photo || \"\",\n            onChange: e => setPhoto(e.target.value),\n            required: true,\n            name: \"photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        id: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Column.Group, {\n            children: /*#__PURE__*/_jsxDEV(Column, {\n              className: \"has-text-right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"custom-purple\",\n                outlined: true,\n                children: \"Atualizar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), status == \"error\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"danger\",\n        children: \"Falha ao Atualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), status == \"success\" && /*#__PURE__*/_jsxDEV(Help, {\n        color: \"primary\",\n        children: \"Atualizado com sucesso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UsersEditForm, \"BYSwtaNBcHqv030o0FZptqoFIOc=\");\n\n_c = UsersEditForm;\nexport default UsersEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersEditForm\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/projetos/notasReact/javascript_note/src/components/users/user_edit_form/index.js"],"names":["React","Fragment","useState","useEffect","Button","Field","Control","Input","Column","Title","Help","Label","File","Image","UserService","FontAwesomeIcon","faUpload","UsersEditForm","email","setEmail","name","setName","photo","setPhoto","status","setStatus","initializeUser","user","JSON","parse","localStorage","getItem","handleSubmit","evt","preventDefault","update","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Button, Field, Control, Input, Column, Title, Help, Label, File, Image } from \"rbx\";\r\nimport UserService from '../../../services/users';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction UsersEditForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [status, setStatus] = useState(null);\r\n\r\n  const initializeUser = async () => {\r\n    const user = await JSON.parse(localStorage.getItem('user'));\r\n    setName(user['name']);\r\n    setEmail(user['email']);\r\n    setPhoto(user['photo']);\r\n  }\r\n\r\n  useEffect(() =>{\r\n    initializeUser()    \r\n  }, [])\r\n\r\n  const handleSubmit = async (evt) => {\r\n    evt.preventDefault();\r\n\r\n    try {\r\n      await UserService.update({ email: email, name: name, photo:photo });\r\n      setStatus(\"success\")\r\n    } catch (err) {\r\n      setStatus(\"error\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Nome</Label>\r\n            <Input\r\n              type=\"name\"\r\n              value={name || \"\"}\r\n              onChange={e => setName(e.target.value)}\r\n              required\r\n              name=\"name\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              value={email || \"\"}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n              name=\"email\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n\r\n\r\n        <Field>\r\n          <Control>\r\n            <Label className=\"has-text-grey\">Image</Label>\r\n            <Input\r\n              type=\"file\"\r\n              value={photo || \"\"}\r\n              onChange={e => setPhoto(e.target.value)}\r\n              required\r\n              name=\"photo\"\r\n            />\r\n          </Control>\r\n        </Field>\r\n        <Image id=\"avatar\" />\r\n\r\n        <Field>\r\n          <Control>\r\n            <Column.Group>\r\n              <Column className=\"has-text-right\">\r\n                <Button color=\"custom-purple\" outlined>Atualizar</Button>\r\n              </Column>\r\n            </Column.Group>\r\n          </Control>\r\n        </Field>\r\n        {status == \"error\" &&\r\n          <Help color=\"danger\">Falha ao Atualizar</Help>\r\n        }\r\n        {status == \"success\" &&\r\n          <Help color=\"primary\">Atualizado com sucesso</Help>\r\n        }\r\n        \r\n{/*                <File id=\"form\" enctype=\"multipart/form-data\">\r\n                <File.Label>\r\n                    <File.Input type=\"file\" name=\"photo\" />\r\n                    <File.CTA>\r\n                        <File.Icon>\r\n                            <FontAwesomeIcon icon={faUpload} />\r\n                        </File.Icon>\r\n                        <File.Label as=\"span\">Choose a File</File.Label>\r\n                    </File.CTA>\r\n                </File.Label>\r\n                <Button type=\"submit\" name=\"upload\">Upload</Button>\r\n                <Image id=\"avatar\" />\r\n            </File> */}\r\n\r\n      </form>\r\n    </Fragment>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default UsersEditForm;"]},"metadata":{},"sourceType":"module"}